{"ast":null,"code":"var _jsxFileName = \"/Users/shreyaktimsina/Documents/React/router-2/frontend/src/App.js\";\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./pages/Home\";\nimport Events from \"./pages/Events\";\nimport EventDetail from \"./pages/EventDetail\";\nimport NewEvent from \"./pages/NewEvent\";\nimport EditEvent from \"./pages/EditEvent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst routes = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 14\n  }, this),\n  children: [{\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(Events, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 34\n    }, this)\n  }, {\n    path: \"events/:eventId\",\n    element: /*#__PURE__*/_jsxDEV(EventDetail, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 43\n    }, this)\n  }, {\n    path: \"events/new\",\n    element: /*#__PURE__*/_jsxDEV(NewEvent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 38\n    }, this)\n  }, {\n    path: \"events/:eventId/edit\",\n    element: /*#__PURE__*/_jsxDEV(EditEvent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 48\n    }, this)\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: routes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","Events","EventDetail","NewEvent","EditEvent","jsxDEV","_jsxDEV","routes","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","App","router","_c","$RefreshReg$"],"sources":["/Users/shreyaktimsina/Documents/React/router-2/frontend/src/App.js"],"sourcesContent":["// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./pages/Home\";\nimport Events from \"./pages/Events\";\nimport EventDetail from \"./pages/EventDetail\";\nimport NewEvent from \"./pages/NewEvent\";\nimport EditEvent from \"./pages/EditEvent\";\n\nconst routes = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <HomePage />,\n    children: [\n      { path: \"events\", element: <Events /> },\n      { path: \"events/:eventId\", element: <EventDetail /> },\n      { path: \"events/new\", element: <NewEvent /> },\n      { path: \"events/:eventId/edit\", element: <EditEvent /> },\n    ],\n  },\n]);\n\nfunction App() {\n  return <RouterProvider router={routes} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,MAAM,GAAGT,mBAAmB,CAAC,CACjC;EACEU,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACN,QAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACrBC,QAAQ,EAAE,CACR;IAAEN,IAAI,EAAE,QAAQ;IAAEC,OAAO,eAAEH,OAAA,CAACL,MAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACvC;IAAEL,IAAI,EAAE,iBAAiB;IAAEC,OAAO,eAAEH,OAAA,CAACJ,WAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACrD;IAAEL,IAAI,EAAE,YAAY;IAAEC,OAAO,eAAEH,OAAA,CAACH,QAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EAC7C;IAAEL,IAAI,EAAE,sBAAsB;IAAEC,OAAO,eAAEH,OAAA,CAACF,SAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC;AAE5D,CAAC,CACF,CAAC;AAEF,SAASE,GAAGA,CAAA,EAAG;EACb,oBAAOT,OAAA,CAACP,cAAc;IAACiB,MAAM,EAAET;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACI,EAAA,GAFQF,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}